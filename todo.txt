the naming system must
- indicate if it is meant to be pulled dynamically from the filesystem or not (and from pm-template or a local file)
- indicate if it is overrideable locally or not
    - not every template pulled from

You cannot have a MixedCaps and ALL_CAPS disparity; the template creator doesn't want to prescribe whether a particular block is site-side or page-specific. Instead, templates are first sourced from
Actually, you do. If the template creator doesn't decide it, the non-technical end user wouldn't know how else to do it.

If you link to a html file, how easy/cheap is it to discover the theme file? It's easy to keep going up a directory and checking for a globals.toml
Discovering the theme file is cheap on the filesystem but potentially expensive on the database because you'd have to issue many queries (open many files) just to find what you are looking for.
github.com/bokwoon95/plainsimple/index.html

even if you loaded all the files in the theme directory to avoid the recursive node walking, there's now the risk that templates can be unintentionally overridden by the consumer index.html. Maybe that's just life with Go templates.

{{ template "github.com/bokwoon95/plainsimple/index.html" }}

templates need some way to define globals.html or globals.json or something

some templates are pulled from the filesystem and are overrideable {{ block "content" }}
some templates are pulled from the
also is it html, md or txt?

{{ block "Content" . }}
Default content
{{ end }}

{{ template "content.html" . }}

{{ template "content" }}{{ end }}

let's say you want to use an overrideable piece of text in two different places

<title>{{ define "SITE_NAME" . }}{{ end }}</title>
{{ template "Content" }}

Content.html
subdir.html

{{ template "pm-template" }}

all non pm-template

{{ block "!content" . }}default content{{ end }}

content.html
content.md
content.txt

template "pm-template/hi.html"

{{ block "content.html" }}{{ end }}

local files -> parsed by default
walk the nodes -> parse all files referenced by pm-template/* (using html)
how to indicate if a template is user-overrideable?

pm-template/github.com/bokwoon95/plainsimple/blog.html

{{ template "override:content" }}
{{ define "!content" }}{{ end }}

{{ block "!content" . }}uh{{ end }}
